1) Revision de /sessions
   Revision de /api/sessions
    A) Además, agregar una propiedad al usuario llamada “last_connection”, la cual deberá modificarse 
cada vez que el usuario realice un proceso de login y logout (OPCIONAL).

2) Revision de /products
   Revision de /api/products
    - ADMIN: ve todos los productos. Puede editar y borrar todos los productos.
    - USER: ve todos los productos. No puede editar y borrar productos. No puede acceder a la
    seccion "Mis productos". No puede acceder a otras rutas.
    - PREMIUM USER: ve todos los productos. Puede editar y borrar todos sus productos.

    A) Modificar el endpoint que elimina productos, para que, en caso de que el producto pertenezca
    a un usuario premium, le envíe un correo indicándole que el producto fue eliminado.

3) Revision de /carts
   Revision de /api/carts

    A) Finalizar las vistas pendientes para la realización de flujo completo de compra. 
    NO ES NECESARIO tener una estructura específica de vistas, sólo las que tú consideres necesarias
    para poder llevar a cabo el proceso de compra.

4) Revision de /users
   Revision de /api/users

    A) Crear ruta api/users para ver a los usuarios. Solo ADMIN.

    B)Crear un endpoint en el router de usuarios api/users/:uid/documents con el método POST que permita 
    subir uno o múltiples archivos. Utilizar el middleware de Multer para poder recibir los documentos 
    que se carguen y actualizar en el usuario su status para hacer saber que ya subió algún documento en 
    particular. 
    
        A) El middleware de multer deberá estar modificado para que pueda guardar en diferentes carpetas
        los diferentes archivos que se suban.
            Si se sube una imagen de perfil, deberá guardarlo en una carpeta profiles, en caso de recibir 
            la imagen de un producto, deberá guardarlo en una carpeta products, mientras que ahora al cargar
            un documento, multer los guardará en una carpeta documents. configurar directamente desde el 
            storage del uploader (modificar el destination).

        B) En caso de llamar al endpoint, si no se ha terminado de cargar la documentación, devolver un 
        error indicando que el usuario no ha terminado de procesar su documentación. 
        (Sólo si quiere pasar de user a premium, no al revés)

    C) Modificar el endpoint /api/users/premium/:uid para que sólo actualice al usuario a premium si ya ha
    cargado los siguientes documentos:
    DNI, Comprobante de domicilio, Comprobante de estado de cuenta

    D) Desde el router de /api/users, crear tres rutas:
    - GET  /  deberá obtener todos los usuarios, éste sólo debe devolver los datos principales 
    como nombre, correo, tipo de cuenta (rol)
    - DELETE / deberá limpiar a todos los usuarios que no hayan tenido conexión en los últimos 2 días.
    (puedes hacer pruebas con los últimos 30 minutos, por ejemplo). Deberá enviarse un correo 
    indicando al usuario que su cuenta ha sido eliminada por inactividad.

    E) Crear una vista para poder visualizar, modificar el rol y eliminar un usuario. Esta vista 
    únicamente será accesible para el administrador del ecommerce

5) Realizar el despliegue de tu aplicativo en la plataforma de tu elección (Preferentemente 
Railway.app, pues es la abarcada en el curso) y corroborar que se puede llevar a cabo un proceso
 de compra completo.

General) Ordenar roles.
ROL user: solo ve productos y puede comprar.
ROL premium: ve productos, puede comprar y agregar productos. Tiene prods propios.
ADMIN: premium + edita todo.







